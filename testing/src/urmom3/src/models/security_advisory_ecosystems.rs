/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SecurityAdvisoryEcosystems : The package's language or package management ecosystem.

/// The package's language or package management ecosystem.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SecurityAdvisoryEcosystems {
    #[serde(rename = "rubygems")]
    Rubygems,
    #[serde(rename = "npm")]
    Npm,
    #[serde(rename = "pip")]
    Pip,
    #[serde(rename = "maven")]
    Maven,
    #[serde(rename = "nuget")]
    Nuget,
    #[serde(rename = "composer")]
    Composer,
    #[serde(rename = "go")]
    Go,
    #[serde(rename = "rust")]
    Rust,
    #[serde(rename = "erlang")]
    Erlang,
    #[serde(rename = "actions")]
    Actions,
    #[serde(rename = "pub")]
    Pub,
    #[serde(rename = "other")]
    Other,
    #[serde(rename = "swift")]
    Swift,

}

impl ToString for SecurityAdvisoryEcosystems {
    fn to_string(&self) -> String {
        match self {
            Self::Rubygems => String::from("rubygems"),
            Self::Npm => String::from("npm"),
            Self::Pip => String::from("pip"),
            Self::Maven => String::from("maven"),
            Self::Nuget => String::from("nuget"),
            Self::Composer => String::from("composer"),
            Self::Go => String::from("go"),
            Self::Rust => String::from("rust"),
            Self::Erlang => String::from("erlang"),
            Self::Actions => String::from("actions"),
            Self::Pub => String::from("pub"),
            Self::Other => String::from("other"),
            Self::Swift => String::from("swift"),
        }
    }
}

impl Default for SecurityAdvisoryEcosystems {
    fn default() -> SecurityAdvisoryEcosystems {
        Self::Rubygems
    }
}




