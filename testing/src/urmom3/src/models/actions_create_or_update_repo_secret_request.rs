/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ActionsCreateOrUpdateRepoSecretRequest {
    /// Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/rest/actions/secrets#get-a-repository-public-key) endpoint.
    #[serde(rename = "encrypted_value", skip_serializing_if = "Option::is_none")]
    pub encrypted_value: Option<String>,
    /// ID of the key you used to encrypt the secret.
    #[serde(rename = "key_id", skip_serializing_if = "Option::is_none")]
    pub key_id: Option<String>,
}

impl ActionsCreateOrUpdateRepoSecretRequest {
    pub fn new() -> ActionsCreateOrUpdateRepoSecretRequest {
        ActionsCreateOrUpdateRepoSecretRequest {
            encrypted_value: None,
            key_id: None,
        }
    }
}


