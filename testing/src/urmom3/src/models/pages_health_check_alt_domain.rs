/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PagesHealthCheckAltDomain {
    #[serde(rename = "host", skip_serializing_if = "Option::is_none")]
    pub host: Option<String>,
    #[serde(rename = "uri", skip_serializing_if = "Option::is_none")]
    pub uri: Option<String>,
    #[serde(rename = "nameservers", skip_serializing_if = "Option::is_none")]
    pub nameservers: Option<String>,
    #[serde(rename = "dns_resolves", skip_serializing_if = "Option::is_none")]
    pub dns_resolves: Option<bool>,
    #[serde(rename = "is_proxied", skip_serializing_if = "Option::is_none")]
    pub is_proxied: Option<bool>,
    #[serde(rename = "is_cloudflare_ip", skip_serializing_if = "Option::is_none")]
    pub is_cloudflare_ip: Option<bool>,
    #[serde(rename = "is_fastly_ip", skip_serializing_if = "Option::is_none")]
    pub is_fastly_ip: Option<bool>,
    #[serde(rename = "is_old_ip_address", skip_serializing_if = "Option::is_none")]
    pub is_old_ip_address: Option<bool>,
    #[serde(rename = "is_a_record", skip_serializing_if = "Option::is_none")]
    pub is_a_record: Option<bool>,
    #[serde(rename = "has_cname_record", skip_serializing_if = "Option::is_none")]
    pub has_cname_record: Option<bool>,
    #[serde(rename = "has_mx_records_present", skip_serializing_if = "Option::is_none")]
    pub has_mx_records_present: Option<bool>,
    #[serde(rename = "is_valid_domain", skip_serializing_if = "Option::is_none")]
    pub is_valid_domain: Option<bool>,
    #[serde(rename = "is_apex_domain", skip_serializing_if = "Option::is_none")]
    pub is_apex_domain: Option<bool>,
    #[serde(rename = "should_be_a_record", skip_serializing_if = "Option::is_none")]
    pub should_be_a_record: Option<bool>,
    #[serde(rename = "is_cname_to_github_user_domain", skip_serializing_if = "Option::is_none")]
    pub is_cname_to_github_user_domain: Option<bool>,
    #[serde(rename = "is_cname_to_pages_dot_github_dot_com", skip_serializing_if = "Option::is_none")]
    pub is_cname_to_pages_dot_github_dot_com: Option<bool>,
    #[serde(rename = "is_cname_to_fastly", skip_serializing_if = "Option::is_none")]
    pub is_cname_to_fastly: Option<bool>,
    #[serde(rename = "is_pointed_to_github_pages_ip", skip_serializing_if = "Option::is_none")]
    pub is_pointed_to_github_pages_ip: Option<bool>,
    #[serde(rename = "is_non_github_pages_ip_present", skip_serializing_if = "Option::is_none")]
    pub is_non_github_pages_ip_present: Option<bool>,
    #[serde(rename = "is_pages_domain", skip_serializing_if = "Option::is_none")]
    pub is_pages_domain: Option<bool>,
    #[serde(rename = "is_served_by_pages", skip_serializing_if = "Option::is_none")]
    pub is_served_by_pages: Option<bool>,
    #[serde(rename = "is_valid", skip_serializing_if = "Option::is_none")]
    pub is_valid: Option<bool>,
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    #[serde(rename = "responds_to_https", skip_serializing_if = "Option::is_none")]
    pub responds_to_https: Option<bool>,
    #[serde(rename = "enforces_https", skip_serializing_if = "Option::is_none")]
    pub enforces_https: Option<bool>,
    #[serde(rename = "https_error", skip_serializing_if = "Option::is_none")]
    pub https_error: Option<String>,
    #[serde(rename = "is_https_eligible", skip_serializing_if = "Option::is_none")]
    pub is_https_eligible: Option<bool>,
    #[serde(rename = "caa_error", skip_serializing_if = "Option::is_none")]
    pub caa_error: Option<String>,
}

impl PagesHealthCheckAltDomain {
    pub fn new() -> PagesHealthCheckAltDomain {
        PagesHealthCheckAltDomain {
            host: None,
            uri: None,
            nameservers: None,
            dns_resolves: None,
            is_proxied: None,
            is_cloudflare_ip: None,
            is_fastly_ip: None,
            is_old_ip_address: None,
            is_a_record: None,
            has_cname_record: None,
            has_mx_records_present: None,
            is_valid_domain: None,
            is_apex_domain: None,
            should_be_a_record: None,
            is_cname_to_github_user_domain: None,
            is_cname_to_pages_dot_github_dot_com: None,
            is_cname_to_fastly: None,
            is_pointed_to_github_pages_ip: None,
            is_non_github_pages_ip_present: None,
            is_pages_domain: None,
            is_served_by_pages: None,
            is_valid: None,
            reason: None,
            responds_to_https: None,
            enforces_https: None,
            https_error: None,
            is_https_eligible: None,
            caa_error: None,
        }
    }
}


