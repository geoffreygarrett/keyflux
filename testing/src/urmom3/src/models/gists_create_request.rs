/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GistsCreateRequest {
    /// Description of the gist
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Names and content for the files that make up the gist
    #[serde(rename = "files")]
    pub files: ::std::collections::HashMap<String, crate::models::GistsCreateRequestFilesValue>,
    #[serde(rename = "public", skip_serializing_if = "Option::is_none")]
    pub public: Option<Box<crate::models::GistsCreateRequestPublic>>,
}

impl GistsCreateRequest {
    pub fn new(files: ::std::collections::HashMap<String, crate::models::GistsCreateRequestFilesValue>) -> GistsCreateRequest {
        GistsCreateRequest {
            description: None,
            files,
            public: None,
        }
    }
}


