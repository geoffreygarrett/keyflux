/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SecretScanningLocationDetails {
    /// The file path of the wiki page
    #[serde(rename = "path")]
    pub path: String,
    /// Line number at which the secret starts in the file
    #[serde(rename = "start_line")]
    pub start_line: f32,
    /// Line number at which the secret ends in the file
    #[serde(rename = "end_line")]
    pub end_line: f32,
    /// The column at which the secret starts within the start line when the file is interpreted as 8-bit ASCII.
    #[serde(rename = "start_column")]
    pub start_column: f32,
    /// The column at which the secret ends within the end line when the file is interpreted as 8-bit ASCII.
    #[serde(rename = "end_column")]
    pub end_column: f32,
    /// SHA-1 hash ID of the associated blob
    #[serde(rename = "blob_sha")]
    pub blob_sha: String,
    /// The API URL to get the associated blob resource
    #[serde(rename = "blob_url")]
    pub blob_url: String,
    /// SHA-1 hash ID of the associated commit
    #[serde(rename = "commit_sha")]
    pub commit_sha: String,
    /// The GitHub URL to get the associated wiki commit
    #[serde(rename = "commit_url")]
    pub commit_url: String,
    /// The GitHub URL to get the associated wiki page
    #[serde(rename = "page_url")]
    pub page_url: String,
    /// The API URL to get the issue where the secret was detected.
    #[serde(rename = "issue_title_url")]
    pub issue_title_url: String,
    /// The API URL to get the issue where the secret was detected.
    #[serde(rename = "issue_body_url")]
    pub issue_body_url: String,
    /// The API URL to get the issue comment where the secret was detected.
    #[serde(rename = "issue_comment_url")]
    pub issue_comment_url: String,
    /// The URL to the discussion where the secret was detected.
    #[serde(rename = "discussion_title_url")]
    pub discussion_title_url: String,
    /// The URL to the discussion where the secret was detected.
    #[serde(rename = "discussion_body_url")]
    pub discussion_body_url: String,
    /// The API URL to get the discussion comment where the secret was detected.
    #[serde(rename = "discussion_comment_url")]
    pub discussion_comment_url: String,
    /// The API URL to get the pull request where the secret was detected.
    #[serde(rename = "pull_request_title_url")]
    pub pull_request_title_url: String,
    /// The API URL to get the pull request where the secret was detected.
    #[serde(rename = "pull_request_body_url")]
    pub pull_request_body_url: String,
    /// The API URL to get the pull request comment where the secret was detected.
    #[serde(rename = "pull_request_comment_url")]
    pub pull_request_comment_url: String,
    /// The API URL to get the pull request review where the secret was detected.
    #[serde(rename = "pull_request_review_url")]
    pub pull_request_review_url: String,
    /// The API URL to get the pull request review comment where the secret was detected.
    #[serde(rename = "pull_request_review_comment_url")]
    pub pull_request_review_comment_url: String,
}

impl SecretScanningLocationDetails {
    pub fn new(path: String, start_line: f32, end_line: f32, start_column: f32, end_column: f32, blob_sha: String, blob_url: String, commit_sha: String, commit_url: String, page_url: String, issue_title_url: String, issue_body_url: String, issue_comment_url: String, discussion_title_url: String, discussion_body_url: String, discussion_comment_url: String, pull_request_title_url: String, pull_request_body_url: String, pull_request_comment_url: String, pull_request_review_url: String, pull_request_review_comment_url: String) -> SecretScanningLocationDetails {
        SecretScanningLocationDetails {
            path,
            start_line,
            end_line,
            start_column,
            end_column,
            blob_sha,
            blob_url,
            commit_sha,
            commit_url,
            page_url,
            issue_title_url,
            issue_body_url,
            issue_comment_url,
            discussion_title_url,
            discussion_body_url,
            discussion_comment_url,
            pull_request_title_url,
            pull_request_body_url,
            pull_request_comment_url,
            pull_request_review_url,
            pull_request_review_comment_url,
        }
    }
}


