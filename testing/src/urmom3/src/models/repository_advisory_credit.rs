/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// RepositoryAdvisoryCredit : A credit given to a user for a repository security advisory.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RepositoryAdvisoryCredit {
    #[serde(rename = "user")]
    pub user: Box<crate::models::SimpleUser>,
    #[serde(rename = "type")]
    pub r#type: crate::models::SecurityAdvisoryCreditTypes,
    /// The state of the user's acceptance of the credit.
    #[serde(rename = "state")]
    pub state: State,
}

impl RepositoryAdvisoryCredit {
    /// A credit given to a user for a repository security advisory.
    pub fn new(user: crate::models::SimpleUser, r#type: crate::models::SecurityAdvisoryCreditTypes, state: State) -> RepositoryAdvisoryCredit {
        RepositoryAdvisoryCredit {
            user: Box::new(user),
            r#type,
            state,
        }
    }
}

/// The state of the user's acceptance of the credit.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "accepted")]
    Accepted,
    #[serde(rename = "declined")]
    Declined,
    #[serde(rename = "pending")]
    Pending,
}

impl Default for State {
    fn default() -> State {
        Self::Accepted
    }
}

