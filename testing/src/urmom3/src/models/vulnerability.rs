/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Vulnerability : A vulnerability describing the product and its affected versions within a GitHub Security Advisory.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Vulnerability {
    #[serde(rename = "package")]
    pub package: Option<Box<crate::models::VulnerabilityPackage>>,
    /// The range of the package versions affected by the vulnerability.
    #[serde(rename = "vulnerable_version_range")]
    pub vulnerable_version_range: Option<String>,
    /// The package version that resolves the vulnerability.
    #[serde(rename = "first_patched_version")]
    pub first_patched_version: Option<String>,
    /// The functions in the package that are affected by the vulnerability.
    #[serde(rename = "vulnerable_functions")]
    pub vulnerable_functions: Option<Vec<String>>,
}

impl Vulnerability {
    /// A vulnerability describing the product and its affected versions within a GitHub Security Advisory.
    pub fn new(package: Option<crate::models::VulnerabilityPackage>, vulnerable_version_range: Option<String>, first_patched_version: Option<String>, vulnerable_functions: Option<Vec<String>>) -> Vulnerability {
        Vulnerability {
            package: if let Some(x) = package {Some(Box::new(x))} else {None},
            vulnerable_version_range,
            first_patched_version,
            vulnerable_functions,
        }
    }
}


