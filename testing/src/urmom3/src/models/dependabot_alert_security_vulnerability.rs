/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// DependabotAlertSecurityVulnerability : Details pertaining to one vulnerable version range for the advisory.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DependabotAlertSecurityVulnerability {
    #[serde(rename = "package")]
    pub package: Box<crate::models::DependabotAlertPackage>,
    /// The severity of the vulnerability.
    #[serde(rename = "severity")]
    pub severity: Severity,
    /// Conditions that identify vulnerable versions of this vulnerability's package.
    #[serde(rename = "vulnerable_version_range")]
    pub vulnerable_version_range: String,
    #[serde(rename = "first_patched_version")]
    pub first_patched_version: Option<Box<crate::models::DependabotAlertSecurityVulnerabilityFirstPatchedVersion>>,
}

impl DependabotAlertSecurityVulnerability {
    /// Details pertaining to one vulnerable version range for the advisory.
    pub fn new(package: crate::models::DependabotAlertPackage, severity: Severity, vulnerable_version_range: String, first_patched_version: Option<crate::models::DependabotAlertSecurityVulnerabilityFirstPatchedVersion>) -> DependabotAlertSecurityVulnerability {
        DependabotAlertSecurityVulnerability {
            package: Box::new(package),
            severity,
            vulnerable_version_range,
            first_patched_version: if let Some(x) = first_patched_version {Some(Box::new(x))} else {None},
        }
    }
}

/// The severity of the vulnerability.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Severity {
    #[serde(rename = "low")]
    Low,
    #[serde(rename = "medium")]
    Medium,
    #[serde(rename = "high")]
    High,
    #[serde(rename = "critical")]
    Critical,
}

impl Default for Severity {
    fn default() -> Severity {
        Self::Low
    }
}

