/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// EnterpriseTeam : Group of enterprise owners and/or members



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EnterpriseTeam {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "slug")]
    pub slug: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "sync_to_organizations")]
    pub sync_to_organizations: String,
    #[serde(rename = "group_id", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<i32>,
    #[serde(rename = "html_url")]
    pub html_url: String,
    #[serde(rename = "members_url")]
    pub members_url: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl EnterpriseTeam {
    /// Group of enterprise owners and/or members
    pub fn new(id: i64, name: String, slug: String, url: String, sync_to_organizations: String, html_url: String, members_url: String, created_at: String, updated_at: String) -> EnterpriseTeam {
        EnterpriseTeam {
            id,
            name,
            slug,
            url,
            sync_to_organizations,
            group_id: None,
            html_url,
            members_url,
            created_at,
            updated_at,
        }
    }
}


