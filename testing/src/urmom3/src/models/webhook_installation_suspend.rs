/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WebhookInstallationSuspend {
    #[serde(rename = "action")]
    pub action: Action,
    #[serde(rename = "enterprise", skip_serializing_if = "Option::is_none")]
    pub enterprise: Option<Box<crate::models::EnterpriseWebhooks>>,
    #[serde(rename = "installation")]
    pub installation: Box<crate::models::Installation>,
    #[serde(rename = "organization", skip_serializing_if = "Option::is_none")]
    pub organization: Option<Box<crate::models::OrganizationSimpleWebhooks>>,
    /// An array of repository objects that the installation can access.
    #[serde(rename = "repositories", skip_serializing_if = "Option::is_none")]
    pub repositories: Option<Vec<crate::models::WebhooksRepositoriesInner>>,
    #[serde(rename = "repository", skip_serializing_if = "Option::is_none")]
    pub repository: Option<Box<crate::models::RepositoryWebhooks>>,
    #[serde(rename = "requester", skip_serializing_if = "Option::is_none")]
    pub requester: Option<serde_json::Value>,
    #[serde(rename = "sender")]
    pub sender: Box<crate::models::SimpleUserWebhooks>,
}

impl WebhookInstallationSuspend {
    pub fn new(action: Action, installation: crate::models::Installation, sender: crate::models::SimpleUserWebhooks) -> WebhookInstallationSuspend {
        WebhookInstallationSuspend {
            action,
            enterprise: None,
            installation: Box::new(installation),
            organization: None,
            repositories: None,
            repository: None,
            requester: None,
            sender: Box::new(sender),
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "suspend")]
    Suspend,
}

impl Default for Action {
    fn default() -> Action {
        Self::Suspend
    }
}

