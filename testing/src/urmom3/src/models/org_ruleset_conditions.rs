/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// OrgRulesetConditions : Conditions for an organization ruleset. The conditions object should contain both `repository_name` and `ref_name` properties or both `repository_id` and `ref_name` properties. 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OrgRulesetConditions {
    #[serde(rename = "ref_name", skip_serializing_if = "Option::is_none")]
    pub ref_name: Option<Box<crate::models::RepositoryRulesetConditionsRefName>>,
    #[serde(rename = "repository_name")]
    pub repository_name: Box<crate::models::RepositoryRulesetConditionsRepositoryNameTargetRepositoryName>,
}

impl OrgRulesetConditions {
    /// Conditions for an organization ruleset. The conditions object should contain both `repository_name` and `ref_name` properties or both `repository_id` and `ref_name` properties. 
    pub fn new(repository_name: crate::models::RepositoryRulesetConditionsRepositoryNameTargetRepositoryName) -> OrgRulesetConditions {
        OrgRulesetConditions {
            ref_name: None,
            repository_name: Box::new(repository_name),
        }
    }
}


