/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WebhookIssuesOpenedChanges {
    #[serde(rename = "old_issue")]
    pub old_issue: Option<Box<crate::models::Issue10>>,
    #[serde(rename = "old_repository")]
    pub old_repository: Box<crate::models::Repository2>,
}

impl WebhookIssuesOpenedChanges {
    pub fn new(old_issue: Option<crate::models::Issue10>, old_repository: crate::models::Repository2) -> WebhookIssuesOpenedChanges {
        WebhookIssuesOpenedChanges {
            old_issue: if let Some(x) = old_issue {Some(Box::new(x))} else {None},
            old_repository: Box::new(old_repository),
        }
    }
}


