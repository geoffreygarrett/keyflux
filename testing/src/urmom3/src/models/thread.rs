/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Thread : Thread



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Thread {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "repository")]
    pub repository: Box<crate::models::MinimalRepository>,
    #[serde(rename = "subject")]
    pub subject: Box<crate::models::ThreadSubject>,
    #[serde(rename = "reason")]
    pub reason: String,
    #[serde(rename = "unread")]
    pub unread: bool,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "last_read_at")]
    pub last_read_at: Option<String>,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "subscription_url")]
    pub subscription_url: String,
}

impl Thread {
    /// Thread
    pub fn new(id: String, repository: crate::models::MinimalRepository, subject: crate::models::ThreadSubject, reason: String, unread: bool, updated_at: String, last_read_at: Option<String>, url: String, subscription_url: String) -> Thread {
        Thread {
            id,
            repository: Box::new(repository),
            subject: Box::new(subject),
            reason,
            unread,
            updated_at,
            last_read_at,
            url,
            subscription_url,
        }
    }
}


