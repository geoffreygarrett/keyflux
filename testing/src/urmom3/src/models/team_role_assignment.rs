/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TeamRoleAssignment : The Relationship a Team has with a role.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TeamRoleAssignment {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "node_id")]
    pub node_id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "slug")]
    pub slug: String,
    #[serde(rename = "description")]
    pub description: Option<String>,
    #[serde(rename = "privacy", skip_serializing_if = "Option::is_none")]
    pub privacy: Option<String>,
    #[serde(rename = "notification_setting", skip_serializing_if = "Option::is_none")]
    pub notification_setting: Option<String>,
    #[serde(rename = "permission")]
    pub permission: String,
    #[serde(rename = "permissions", skip_serializing_if = "Option::is_none")]
    pub permissions: Option<Box<crate::models::TeamPermissions>>,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "html_url")]
    pub html_url: String,
    #[serde(rename = "members_url")]
    pub members_url: String,
    #[serde(rename = "repositories_url")]
    pub repositories_url: String,
    #[serde(rename = "parent")]
    pub parent: Option<Box<crate::models::NullableTeamSimple>>,
}

impl TeamRoleAssignment {
    /// The Relationship a Team has with a role.
    pub fn new(id: i32, node_id: String, name: String, slug: String, description: Option<String>, permission: String, url: String, html_url: String, members_url: String, repositories_url: String, parent: Option<crate::models::NullableTeamSimple>) -> TeamRoleAssignment {
        TeamRoleAssignment {
            id,
            node_id,
            name,
            slug,
            description,
            privacy: None,
            notification_setting: None,
            permission,
            permissions: None,
            url,
            html_url,
            members_url,
            repositories_url,
            parent: if let Some(x) = parent {Some(Box::new(x))} else {None},
        }
    }
}


