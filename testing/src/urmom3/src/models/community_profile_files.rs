/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommunityProfileFiles {
    #[serde(rename = "code_of_conduct")]
    pub code_of_conduct: Option<Box<crate::models::NullableCodeOfConductSimple>>,
    #[serde(rename = "code_of_conduct_file")]
    pub code_of_conduct_file: Option<Box<crate::models::NullableCommunityHealthFile>>,
    #[serde(rename = "license")]
    pub license: Option<Box<crate::models::NullableLicenseSimple>>,
    #[serde(rename = "contributing")]
    pub contributing: Option<Box<crate::models::NullableCommunityHealthFile>>,
    #[serde(rename = "readme")]
    pub readme: Option<Box<crate::models::NullableCommunityHealthFile>>,
    #[serde(rename = "issue_template")]
    pub issue_template: Option<Box<crate::models::NullableCommunityHealthFile>>,
    #[serde(rename = "pull_request_template")]
    pub pull_request_template: Option<Box<crate::models::NullableCommunityHealthFile>>,
}

impl CommunityProfileFiles {
    pub fn new(code_of_conduct: Option<crate::models::NullableCodeOfConductSimple>, code_of_conduct_file: Option<crate::models::NullableCommunityHealthFile>, license: Option<crate::models::NullableLicenseSimple>, contributing: Option<crate::models::NullableCommunityHealthFile>, readme: Option<crate::models::NullableCommunityHealthFile>, issue_template: Option<crate::models::NullableCommunityHealthFile>, pull_request_template: Option<crate::models::NullableCommunityHealthFile>) -> CommunityProfileFiles {
        CommunityProfileFiles {
            code_of_conduct: if let Some(x) = code_of_conduct {Some(Box::new(x))} else {None},
            code_of_conduct_file: if let Some(x) = code_of_conduct_file {Some(Box::new(x))} else {None},
            license: if let Some(x) = license {Some(Box::new(x))} else {None},
            contributing: if let Some(x) = contributing {Some(Box::new(x))} else {None},
            readme: if let Some(x) = readme {Some(Box::new(x))} else {None},
            issue_template: if let Some(x) = issue_template {Some(Box::new(x))} else {None},
            pull_request_template: if let Some(x) = pull_request_template {Some(Box::new(x))} else {None},
        }
    }
}


