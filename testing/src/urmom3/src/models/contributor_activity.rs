/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ContributorActivity : Contributor Activity



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ContributorActivity {
    #[serde(rename = "author")]
    pub author: Option<Box<crate::models::NullableSimpleUser>>,
    #[serde(rename = "total")]
    pub total: i32,
    #[serde(rename = "weeks")]
    pub weeks: Vec<crate::models::ContributorActivityWeeksInner>,
}

impl ContributorActivity {
    /// Contributor Activity
    pub fn new(author: Option<crate::models::NullableSimpleUser>, total: i32, weeks: Vec<crate::models::ContributorActivityWeeksInner>) -> ContributorActivity {
        ContributorActivity {
            author: if let Some(x) = author {Some(Box::new(x))} else {None},
            total,
            weeks,
        }
    }
}


