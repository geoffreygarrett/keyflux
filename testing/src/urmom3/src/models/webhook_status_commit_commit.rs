/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WebhookStatusCommitCommit {
    #[serde(rename = "author")]
    pub author: Box<crate::models::WebhookStatusCommitCommitAuthor>,
    #[serde(rename = "comment_count")]
    pub comment_count: i32,
    #[serde(rename = "committer")]
    pub committer: Box<crate::models::WebhookStatusCommitCommitAuthor>,
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "tree")]
    pub tree: Box<crate::models::ShortBranchCommit>,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "verification")]
    pub verification: Box<crate::models::WebhookStatusCommitCommitVerification>,
}

impl WebhookStatusCommitCommit {
    pub fn new(author: crate::models::WebhookStatusCommitCommitAuthor, comment_count: i32, committer: crate::models::WebhookStatusCommitCommitAuthor, message: String, tree: crate::models::ShortBranchCommit, url: String, verification: crate::models::WebhookStatusCommitCommitVerification) -> WebhookStatusCommitCommit {
        WebhookStatusCommitCommit {
            author: Box::new(author),
            comment_count,
            committer: Box::new(committer),
            message,
            tree: Box::new(tree),
            url,
            verification: Box::new(verification),
        }
    }
}


