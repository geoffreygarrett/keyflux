/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// LabelSearchResultItem : Label Search Result Item



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LabelSearchResultItem {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "node_id")]
    pub node_id: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "color")]
    pub color: String,
    #[serde(rename = "default")]
    pub default: bool,
    #[serde(rename = "description")]
    pub description: Option<String>,
    #[serde(rename = "score")]
    pub score: f32,
    #[serde(rename = "text_matches", skip_serializing_if = "Option::is_none")]
    pub text_matches: Option<Vec<crate::models::SearchResultTextMatchesInner>>,
}

impl LabelSearchResultItem {
    /// Label Search Result Item
    pub fn new(id: i32, node_id: String, url: String, name: String, color: String, default: bool, description: Option<String>, score: f32) -> LabelSearchResultItem {
        LabelSearchResultItem {
            id,
            node_id,
            url,
            name,
            color,
            default,
            description,
            score,
            text_matches: None,
        }
    }
}


