=begin
#GitHub v3 REST API

#GitHub's v3 REST API.

The version of the OpenAPI document: 1.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::MetaApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MetaApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::MetaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MetaApi' do
    it 'should create an instance of MetaApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::MetaApi)
    end
  end

  # unit tests for meta_get
  # Get GitHub meta information
  # Returns meta information about GitHub, including a list of GitHub&#39;s IP addresses. For more information, see \&quot;[About GitHub&#39;s IP addresses](https://docs.github.com/articles/about-github-s-ip-addresses/).\&quot;  The API&#39;s response also includes a list of GitHub&#39;s domain names.  The values shown in the documentation&#39;s response are example values. You must always query the API directly to get the latest values.  **Note:** This endpoint returns both IPv4 and IPv6 addresses. However, not all features support IPv6. You should refer to the specific documentation for each feature to determine if IPv6 is supported.
  # @param [Hash] opts the optional parameters
  # @return [ApiOverview]
  describe 'meta_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for meta_get_all_versions
  # Get all API versions
  # Get all supported GitHub API versions.
  # @param [Hash] opts the optional parameters
  # @return [Array<Date>]
  describe 'meta_get_all_versions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for meta_get_octocat
  # Get Octocat
  # Get the octocat as ASCII art
  # @param [Hash] opts the optional parameters
  # @option opts [String] :s The words to show in Octocat&#39;s speech bubble
  # @return [String]
  describe 'meta_get_octocat test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for meta_get_zen
  # Get the Zen of GitHub
  # Get a random sentence from the Zen of GitHub
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'meta_get_zen test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for meta_root
  # GitHub API Root
  # Get Hypermedia links to resources accessible in GitHub&#39;s REST API
  # @param [Hash] opts the optional parameters
  # @return [Root]
  describe 'meta_root test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
