=begin
#GitHub v3 REST API

#GitHub's v3 REST API.

The version of the OpenAPI document: 1.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::OrgsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OrgsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::OrgsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrgsApi' do
    it 'should create an instance of OrgsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::OrgsApi)
    end
  end

  # unit tests for orgs_add_security_manager_team
  # Add a security manager team
  # Adds a team as a security manager for an organization. For more information, see \&quot;[Managing security for an organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization) for an organization.\&quot;  The authenticated user must be an administrator for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;write:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param team_slug The slug of the team name.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_add_security_manager_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_assign_team_to_org_role
  # Assign an organization role to a team
  # Assigns an organization role to a team in an organization. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  The authenticated user must be an administrator for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param team_slug The slug of the team name.
  # @param role_id The unique identifier of the role.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_assign_team_to_org_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_assign_user_to_org_role
  # Assign an organization role to a user
  # Assigns an organization role to a member of an organization. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  The authenticated user must be an administrator for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param role_id The unique identifier of the role.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_assign_user_to_org_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_block_user
  # Block a user from an organization
  # Blocks the given user on behalf of the specified organization and returns a 204. If the organization cannot block the given user a 422 is returned.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_block_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_cancel_invitation
  # Cancel an organization invitation
  # Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner.  This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications).
  # @param org The organization name. The name is not case sensitive.
  # @param invitation_id The unique identifier of the invitation.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_cancel_invitation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_check_blocked_user
  # Check if a user is blocked by an organization
  # Returns a 204 if the given user is blocked by the given organization. Returns a 404 if the organization is not blocking the user, or if the user account has been identified as spam by GitHub.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_check_blocked_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_check_membership_for_user
  # Check organization membership for a user
  # Check if a user is, publicly or privately, a member of the organization.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_check_membership_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_check_public_membership_for_user
  # Check public organization membership for a user
  # Check if the provided user is a public member of the organization.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_check_public_membership_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_convert_member_to_outside_collaborator
  # Convert an organization member to outside collaborator
  # When an organization member is converted to an outside collaborator, they&#39;ll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \&quot;[Converting an organization member to an outside collaborator](https://docs.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\&quot;. Converting an organization member to an outside collaborator may be restricted by enterprise administrators. For more information, see \&quot;[Enforcing repository management policies in your enterprise](https://docs.github.com/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories).\&quot;
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @option opts [OrgsConvertMemberToOutsideCollaboratorRequest] :orgs_convert_member_to_outside_collaborator_request 
  # @return [Object]
  describe 'orgs_convert_member_to_outside_collaborator test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_create_custom_organization_role
  # Create a custom organization role
  # Creates a custom organization role that can be assigned to users and teams, granting them specific permissions over the organization. For more information on custom organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  To use this endpoint, the authenticated user must be one of:  - An administrator for the organization. - A user, or a user on a team, with the fine-grained permissions of &#x60;write_organization_custom_org_role&#x60; in the organization.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param orgs_create_custom_organization_role_request 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationRole]
  describe 'orgs_create_custom_organization_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_create_invitation
  # Create an organization invitation
  # Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.  This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see \&quot;[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)\&quot; and \&quot;[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api).\&quot;
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [OrgsCreateInvitationRequest] :orgs_create_invitation_request 
  # @return [OrganizationInvitation]
  describe 'orgs_create_invitation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_create_or_update_custom_properties
  # Create or update custom properties for an organization
  # Creates new or updates existing custom properties defined for an organization in a batch.  To use this endpoint, the authenticated user must be one of:   - An administrator for the organization.   - A user, or a user on a team, with the fine-grained permission of &#x60;custom_properties_org_definitions_manager&#x60; in the organization.
  # @param org The organization name. The name is not case sensitive.
  # @param orgs_create_or_update_custom_properties_request 
  # @param [Hash] opts the optional parameters
  # @return [Array<OrgCustomProperty>]
  describe 'orgs_create_or_update_custom_properties test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_create_or_update_custom_properties_values_for_repos
  # Create or update custom property values for organization repositories
  # Create new or update existing custom property values for repositories in a batch that belong to an organization. Each target repository will have its custom property values updated to match the values provided in the request.  A maximum of 30 repositories can be updated in a single request.  Using a value of &#x60;null&#x60; for a custom property will remove or &#39;unset&#39; the property value from the repository.  To use this endpoint, the authenticated user must be one of:   - An administrator for the organization.   - A user, or a user on a team, with the fine-grained permission of &#x60;custom_properties_org_values_editor&#x60; in the organization.
  # @param org The organization name. The name is not case sensitive.
  # @param orgs_create_or_update_custom_properties_values_for_repos_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_create_or_update_custom_properties_values_for_repos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_create_or_update_custom_property
  # Create or update a custom property for an organization
  # Creates a new or updates an existing custom property that is defined for an organization.  To use this endpoint, the authenticated user must be one of: - An administrator for the organization. - A user, or a user on a team, with the fine-grained permission of &#x60;custom_properties_org_definitions_manager&#x60; in the organization.
  # @param org The organization name. The name is not case sensitive.
  # @param custom_property_name The custom property name. The name is case sensitive.
  # @param orgs_create_or_update_custom_property_request 
  # @param [Hash] opts the optional parameters
  # @return [OrgCustomProperty]
  describe 'orgs_create_or_update_custom_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_create_webhook
  # Create an organization webhook
  # Create a hook that posts payloads in JSON format.  You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param orgs_create_webhook_request 
  # @param [Hash] opts the optional parameters
  # @return [OrgHook]
  describe 'orgs_create_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_delete
  # Delete an organization
  # Deletes an organization and all its repositories.  The organization login will be unavailable for 90 days after deletion.  Please review the Terms of Service regarding account deletion before using this endpoint:  https://docs.github.com/site-policy/github-terms/github-terms-of-service
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'orgs_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_delete_custom_organization_role
  # Delete a custom organization role.
  # Deletes a custom organization role. For more information on custom organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  To use this endpoint, the authenticated user must be one of:  - An administrator for the organization. - A user, or a user on a team, with the fine-grained permissions of &#x60;write_organization_custom_org_role&#x60; in the organization.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param role_id The unique identifier of the role.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_delete_custom_organization_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_delete_webhook
  # Delete an organization webhook
  # You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param hook_id The unique identifier of the hook. You can find this value in the &#x60;X-GitHub-Hook-ID&#x60; header of a webhook delivery.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_delete_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_enable_or_disable_security_product_on_all_org_repos
  # Enable or disable a security feature for an organization
  # Enables or disables the specified security feature for all eligible repositories in an organization. For more information, see \&quot;[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).\&quot;  The authenticated user must be an organization owner or be member of a team with the security manager role to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;write:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param security_product The security feature to enable or disable.
  # @param enablement The action to take.  &#x60;enable_all&#x60; means to enable the specified security feature for all repositories in the organization. &#x60;disable_all&#x60; means to disable the specified security feature for all repositories in the organization.
  # @param [Hash] opts the optional parameters
  # @option opts [OrgsEnableOrDisableSecurityProductOnAllOrgReposRequest] :orgs_enable_or_disable_security_product_on_all_org_repos_request 
  # @return [nil]
  describe 'orgs_enable_or_disable_security_product_on_all_org_repos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_get
  # Get an organization
  # Gets information about an organization.  When the value of &#x60;two_factor_requirement_enabled&#x60; is &#x60;true&#x60;, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://docs.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).  To see the full details about an organization, the authenticated user must be an organization owner.  The values returned by this endpoint are set by the \&quot;Update an organization\&quot; endpoint. If your organization set a default security configuration (beta), the following values retrieved from the \&quot;Update an organization\&quot; endpoint have been overwritten by that configuration:  - advanced_security_enabled_for_new_repositories - dependabot_alerts_enabled_for_new_repositories - dependabot_security_updates_enabled_for_new_repositories - dependency_graph_enabled_for_new_repositories - secret_scanning_enabled_for_new_repositories - secret_scanning_push_protection_enabled_for_new_repositories  For more information on security configurations, see \&quot;[Enabling security features at scale](https://docs.github.com/code-security/securing-your-organization/introduction-to-securing-your-organization-at-scale/about-enabling-security-features-at-scale).\&quot;  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to see the full details about an organization.  To see information about an organization&#39;s GitHub plan, GitHub Apps need the &#x60;Organization plan&#x60; permission.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @return [OrganizationFull]
  describe 'orgs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_get_all_custom_properties
  # Get all custom properties for an organization
  # Gets all custom properties defined for an organization. Organization members can read these properties.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @return [Array<OrgCustomProperty>]
  describe 'orgs_get_all_custom_properties test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_get_custom_property
  # Get a custom property for an organization
  # Gets a custom property that is defined for an organization. Organization members can read these properties.
  # @param org The organization name. The name is not case sensitive.
  # @param custom_property_name The custom property name. The name is case sensitive.
  # @param [Hash] opts the optional parameters
  # @return [OrgCustomProperty]
  describe 'orgs_get_custom_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_get_membership_for_authenticated_user
  # Get an organization membership for the authenticated user
  # If the authenticated user is an active or pending member of the organization, this endpoint will return the user&#39;s membership. If the authenticated user is not affiliated with the organization, a &#x60;404&#x60; is returned. This endpoint will return a &#x60;403&#x60; if the request is made by a GitHub App that is blocked by the organization.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @return [OrgMembership]
  describe 'orgs_get_membership_for_authenticated_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_get_membership_for_user
  # Get organization membership for a user
  # In order to get a user&#39;s membership with an organization, the authenticated user must be an organization member. The &#x60;state&#x60; parameter in the response can be used to identify the user&#39;s membership status.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [OrgMembership]
  describe 'orgs_get_membership_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_get_org_role
  # Get an organization role
  # Gets an organization role that is available to this organization. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  To use this endpoint, the authenticated user must be one of:  - An administrator for the organization. - A user, or a user on a team, with the fine-grained permissions of &#x60;read_organization_custom_org_role&#x60; in the organization.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param role_id The unique identifier of the role.
  # @param [Hash] opts the optional parameters
  # @return [OrganizationRole]
  describe 'orgs_get_org_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_get_webhook
  # Get an organization webhook
  # Returns a webhook configured in an organization. To get only the webhook &#x60;config&#x60; properties, see \&quot;[Get a webhook configuration for an organization](/rest/orgs/webhooks#get-a-webhook-configuration-for-an-organization).  You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param hook_id The unique identifier of the hook. You can find this value in the &#x60;X-GitHub-Hook-ID&#x60; header of a webhook delivery.
  # @param [Hash] opts the optional parameters
  # @return [OrgHook]
  describe 'orgs_get_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_get_webhook_config_for_org
  # Get a webhook configuration for an organization
  # Returns the webhook configuration for an organization. To get more information about the webhook, including the &#x60;active&#x60; state and &#x60;events&#x60;, use \&quot;[Get an organization webhook ](/rest/orgs/webhooks#get-an-organization-webhook).\&quot;  You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param hook_id The unique identifier of the hook. You can find this value in the &#x60;X-GitHub-Hook-ID&#x60; header of a webhook delivery.
  # @param [Hash] opts the optional parameters
  # @return [WebhookConfig]
  describe 'orgs_get_webhook_config_for_org test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_get_webhook_delivery
  # Get a webhook delivery for an organization webhook
  # Returns a delivery for a webhook configured in an organization.  You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param hook_id The unique identifier of the hook. You can find this value in the &#x60;X-GitHub-Hook-ID&#x60; header of a webhook delivery.
  # @param delivery_id 
  # @param [Hash] opts the optional parameters
  # @return [HookDelivery]
  describe 'orgs_get_webhook_delivery test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list
  # List organizations
  # Lists all organizations, in the order that they were created.  **Note:** Pagination is powered exclusively by the &#x60;since&#x60; parameter. Use the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers) to get the URL for the next page of organizations.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :since An organization ID. Only return organizations with an ID greater than this ID.
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<OrganizationSimple>]
  describe 'orgs_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_app_installations
  # List app installations for an organization
  # Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in the organization.  The authenticated user must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:read&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [OrgsListAppInstallations200Response]
  describe 'orgs_list_app_installations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_attestations
  # List attestations
  # List a collection of artifact attestations with a given subject digest that are associated with repositories owned by an organization.  The collection of attestations returned by this endpoint is filtered according to the authenticated user&#39;s permissions; if the authenticated user cannot read a repository, the attestations associated with that repository will not be included in the response. In addition, when using a fine-grained access token the &#x60;attestations:read&#x60; permission is required.  **Please note:** in order to offer meaningful security benefits, an attestation&#39;s signature and timestamps **must** be cryptographically verified, and the identity of the attestation signer **must** be validated. Attestations can be verified using the [GitHub CLI &#x60;attestation verify&#x60; command](https://cli.github.com/manual/gh_attestation_verify). For more information, see [our guide on how to use artifact attestations to establish a build&#39;s provenance](https://docs.github.com/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds).
  # @param org The organization name. The name is not case sensitive.
  # @param subject_digest The parameter should be set to the attestation&#39;s subject&#39;s SHA256 digest, in the form &#x60;sha256:HEX_DIGEST&#x60;.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :before A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :after A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [OrgsListAttestations200Response]
  describe 'orgs_list_attestations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_blocked_users
  # List users blocked by an organization
  # List the users blocked by an organization.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<SimpleUser>]
  describe 'orgs_list_blocked_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_custom_properties_values_for_repos
  # List custom property values for organization repositories
  # Lists organization repositories with all of their custom property values. Organization members can read these properties.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :repository_query Finds repositories in the organization with a query containing one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as the web interface for GitHub. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query). See \&quot;[Searching for repositories](https://docs.github.com/articles/searching-for-repositories/)\&quot; for a detailed list of qualifiers.
  # @return [Array<OrgRepoCustomPropertyValues>]
  describe 'orgs_list_custom_properties_values_for_repos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_failed_invitations
  # List failed organization invitations
  # The return hash contains &#x60;failed_at&#x60; and &#x60;failed_reason&#x60; fields which represent the time at which the invitation failed and the reason for the failure.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<OrganizationInvitation>]
  describe 'orgs_list_failed_invitations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_for_authenticated_user
  # List organizations for the authenticated user
  # List organizations for the authenticated user.  For OAuth app tokens and personal access tokens (classic), this endpoint only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with &#x60;read:org&#x60; scope, you can publicize your organization membership with &#x60;user&#x60; scope, etc.). Therefore, this API requires at least &#x60;user&#x60; or &#x60;read:org&#x60; scope for OAuth app tokens and personal access tokens (classic). Requests with insufficient scope will receive a &#x60;403 Forbidden&#x60; response.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<OrganizationSimple>]
  describe 'orgs_list_for_authenticated_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_for_user
  # List organizations for a user
  # List [public organization memberships](https://docs.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.  This method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/rest/orgs/orgs#list-organizations-for-the-authenticated-user) API instead.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<OrganizationSimple>]
  describe 'orgs_list_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_invitation_teams
  # List organization invitation teams
  # List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.
  # @param org The organization name. The name is not case sensitive.
  # @param invitation_id The unique identifier of the invitation.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<Team>]
  describe 'orgs_list_invitation_teams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_members
  # List organization members
  # List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Filter members returned in the list. &#x60;2fa_disabled&#x60; means that only members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled will be returned. This options is only available for organization owners.
  # @option opts [String] :role Filter members returned by their role.
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<SimpleUser>]
  describe 'orgs_list_members test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_memberships_for_authenticated_user
  # List organization memberships for the authenticated user
  # Lists all of the authenticated user&#39;s organization memberships.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state Indicates the state of the memberships to return. If not specified, the API returns both active and pending memberships.
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<OrgMembership>]
  describe 'orgs_list_memberships_for_authenticated_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_org_role_teams
  # List teams that are assigned to an organization role
  # Lists the teams that are assigned to an organization role. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  To use this endpoint, you must be an administrator for the organization.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param role_id The unique identifier of the role.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<TeamRoleAssignment>]
  describe 'orgs_list_org_role_teams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_org_role_users
  # List users that are assigned to an organization role
  # Lists organization members that are assigned to an organization role. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  To use this endpoint, you must be an administrator for the organization.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param role_id The unique identifier of the role.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<UserRoleAssignment>]
  describe 'orgs_list_org_role_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_org_roles
  # Get all organization roles for an organization
  # Lists the organization roles available in this organization. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  To use this endpoint, the authenticated user must be one of:  - An administrator for the organization. - A user, or a user on a team, with the fine-grained permissions of &#x60;read_organization_custom_org_role&#x60; in the organization.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @return [OrgsListOrgRoles200Response]
  describe 'orgs_list_org_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_organization_fine_grained_permissions
  # List organization fine-grained permissions for an organization
  # Lists the fine-grained permissions that can be used in custom organization roles for an organization. For more information, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  To list the fine-grained permissions that can be used in custom repository roles for an organization, see \&quot;[List repository fine-grained permissions for an organization](https://docs.github.com/rest/orgs/organization-roles#list-repository-fine-grained-permissions-for-an-organization).\&quot;  To use this endpoint, the authenticated user must be one of:  - An administrator for the organization. - A user, or a user on a team, with the fine-grained permissions of &#x60;read_organization_custom_org_role&#x60; in the organization.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @return [Array<OrganizationFineGrainedPermission>]
  describe 'orgs_list_organization_fine_grained_permissions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_outside_collaborators
  # List outside collaborators for an organization
  # List all users who are outside collaborators of an organization.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Filter the list of outside collaborators. &#x60;2fa_disabled&#x60; means that only outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled will be returned.
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<SimpleUser>]
  describe 'orgs_list_outside_collaborators test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_pat_grant_repositories
  # List repositories a fine-grained personal access token has access to
  # Lists the repositories a fine-grained personal access token has access to.  Only GitHub Apps can use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param pat_id Unique identifier of the fine-grained personal access token.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<MinimalRepository>]
  describe 'orgs_list_pat_grant_repositories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_pat_grant_request_repositories
  # List repositories requested to be accessed by a fine-grained personal access token
  # Lists the repositories a fine-grained personal access token request is requesting access to.  Only GitHub Apps can use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param pat_request_id Unique identifier of the request for access via fine-grained personal access token.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<MinimalRepository>]
  describe 'orgs_list_pat_grant_request_repositories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_pat_grant_requests
  # List requests to access organization resources with fine-grained personal access tokens
  # Lists requests from organization members to access organization resources with a fine-grained personal access token.  Only GitHub Apps can use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :sort The property by which to sort the results.
  # @option opts [String] :direction The direction to sort the results by.
  # @option opts [Array<String>] :owner A list of owner usernames to use to filter the results.
  # @option opts [String] :repository The name of the repository to use to filter the results.
  # @option opts [String] :permission The permission to use to filter the results.
  # @option opts [Time] :last_used_before Only show fine-grained personal access tokens used before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: &#x60;YYYY-MM-DDTHH:MM:SSZ&#x60;.
  # @option opts [Time] :last_used_after Only show fine-grained personal access tokens used after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: &#x60;YYYY-MM-DDTHH:MM:SSZ&#x60;.
  # @return [Array<OrganizationProgrammaticAccessGrantRequest>]
  describe 'orgs_list_pat_grant_requests test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_pat_grants
  # List fine-grained personal access tokens with access to organization resources
  # Lists approved fine-grained personal access tokens owned by organization members that can access organization resources.  Only GitHub Apps can use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :sort The property by which to sort the results.
  # @option opts [String] :direction The direction to sort the results by.
  # @option opts [Array<String>] :owner A list of owner usernames to use to filter the results.
  # @option opts [String] :repository The name of the repository to use to filter the results.
  # @option opts [String] :permission The permission to use to filter the results.
  # @option opts [Time] :last_used_before Only show fine-grained personal access tokens used before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: &#x60;YYYY-MM-DDTHH:MM:SSZ&#x60;.
  # @option opts [Time] :last_used_after Only show fine-grained personal access tokens used after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: &#x60;YYYY-MM-DDTHH:MM:SSZ&#x60;.
  # @return [Array<OrganizationProgrammaticAccessGrant>]
  describe 'orgs_list_pat_grants test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_pending_invitations
  # List pending organization invitations
  # The return hash contains a &#x60;role&#x60; field which refers to the Organization Invitation role and will be one of the following values: &#x60;direct_member&#x60;, &#x60;admin&#x60;, &#x60;billing_manager&#x60;, or &#x60;hiring_manager&#x60;. If the invitee is not a GitHub member, the &#x60;login&#x60; field in the return hash will be &#x60;null&#x60;.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :role Filter invitations by their member role.
  # @option opts [String] :invitation_source Filter invitations by their invitation source.
  # @return [Array<OrganizationInvitation>]
  describe 'orgs_list_pending_invitations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_public_members
  # List public organization members
  # Members of an organization can choose to have their membership publicized or not.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<SimpleUser>]
  describe 'orgs_list_public_members test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_security_manager_teams
  # List security manager teams
  # Lists teams that are security managers for an organization. For more information, see \&quot;[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).\&quot;  The authenticated user must be an administrator or security manager for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;read:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @return [Array<TeamSimple>]
  describe 'orgs_list_security_manager_teams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_webhook_deliveries
  # List deliveries for an organization webhook
  # Returns a list of webhook deliveries for a webhook configured in an organization.  You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param hook_id The unique identifier of the hook. You can find this value in the &#x60;X-GitHub-Hook-ID&#x60; header of a webhook delivery.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :cursor Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the &#x60;link&#x60; header for the next and previous page cursors.
  # @option opts [Boolean] :redelivery 
  # @return [Array<HookDeliveryItem>]
  describe 'orgs_list_webhook_deliveries test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_list_webhooks
  # List organization webhooks
  # You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<OrgHook>]
  describe 'orgs_list_webhooks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_patch_custom_organization_role
  # Update a custom organization role
  # Updates an existing custom organization role. Permission changes will apply to all assignees. For more information on custom organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;   To use this endpoint, the authenticated user must be one of:  - An administrator for the organization. - A user, or a user on a team, with the fine-grained permissions of &#x60;write_organization_custom_org_role&#x60; in the organization.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param role_id The unique identifier of the role.
  # @param orgs_patch_custom_organization_role_request 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationRole]
  describe 'orgs_patch_custom_organization_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_ping_webhook
  # Ping an organization webhook
  # This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook.  You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param hook_id The unique identifier of the hook. You can find this value in the &#x60;X-GitHub-Hook-ID&#x60; header of a webhook delivery.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_ping_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_redeliver_webhook_delivery
  # Redeliver a delivery for an organization webhook
  # Redeliver a delivery for a webhook configured in an organization.  You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param hook_id The unique identifier of the hook. You can find this value in the &#x60;X-GitHub-Hook-ID&#x60; header of a webhook delivery.
  # @param delivery_id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'orgs_redeliver_webhook_delivery test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_remove_custom_property
  # Remove a custom property for an organization
  # Removes a custom property that is defined for an organization.  To use this endpoint, the authenticated user must be one of:   - An administrator for the organization.   - A user, or a user on a team, with the fine-grained permission of &#x60;custom_properties_org_definitions_manager&#x60; in the organization.
  # @param org The organization name. The name is not case sensitive.
  # @param custom_property_name The custom property name. The name is case sensitive.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_remove_custom_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_remove_member
  # Remove an organization member
  # Removing a user from this list will remove them from all teams and they will no longer have any access to the organization&#39;s repositories.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_remove_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_remove_membership_for_user
  # Remove organization membership for a user
  # In order to remove a user&#39;s membership with an organization, the authenticated user must be an organization owner.  If the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_remove_membership_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_remove_outside_collaborator
  # Remove outside collaborator from an organization
  # Removing a user from this list will remove them from all the organization&#39;s repositories.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_remove_outside_collaborator test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_remove_public_membership_for_authenticated_user
  # Remove public organization membership for the authenticated user
  # Removes the public membership for the authenticated user from the specified organization, unless public visibility is enforced by default.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_remove_public_membership_for_authenticated_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_remove_security_manager_team
  # Remove a security manager team
  # Removes the security manager role from a team for an organization. For more information, see \&quot;[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization) team from an organization.\&quot;  The authenticated user must be an administrator for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param team_slug The slug of the team name.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_remove_security_manager_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_review_pat_grant_request
  # Review a request to access organization resources with a fine-grained personal access token
  # Approves or denies a pending request to access organization resources via a fine-grained personal access token.  Only GitHub Apps can use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param pat_request_id Unique identifier of the request for access via fine-grained personal access token.
  # @param orgs_review_pat_grant_request_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_review_pat_grant_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_review_pat_grant_requests_in_bulk
  # Review requests to access organization resources with fine-grained personal access tokens
  # Approves or denies multiple pending requests to access organization resources via a fine-grained personal access token.  Only GitHub Apps can use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param orgs_review_pat_grant_requests_in_bulk_request 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'orgs_review_pat_grant_requests_in_bulk test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_revoke_all_org_roles_team
  # Remove all organization roles for a team
  # Removes all assigned organization roles from a team. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  The authenticated user must be an administrator for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param team_slug The slug of the team name.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_revoke_all_org_roles_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_revoke_all_org_roles_user
  # Remove all organization roles for a user
  # Revokes all assigned organization roles from a user. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  The authenticated user must be an administrator for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_revoke_all_org_roles_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_revoke_org_role_team
  # Remove an organization role from a team
  # Removes an organization role from a team. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  The authenticated user must be an administrator for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param team_slug The slug of the team name.
  # @param role_id The unique identifier of the role.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_revoke_org_role_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_revoke_org_role_user
  # Remove an organization role from a user
  # Remove an organization role from a user. For more information on organization roles, see \&quot;[Managing people&#39;s access to your organization with roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles).\&quot;  The authenticated user must be an administrator for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param role_id The unique identifier of the role.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_revoke_org_role_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_set_membership_for_user
  # Set organization membership for a user
  # Only authenticated organization owners can add a member to the organization or update the member&#39;s role.  *   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user&#39;s [membership status](https://docs.github.com/rest/orgs/members#get-organization-membership-for-a-user) will be &#x60;pending&#x60; until they accept the invitation.      *   Authenticated users can _update_ a user&#39;s membership by passing the &#x60;role&#x60; parameter. If the authenticated user changes a member&#39;s role to &#x60;admin&#x60;, the affected user will receive an email notifying them that they&#39;ve been made an organization owner. If the authenticated user changes an owner&#39;s role to &#x60;member&#x60;, no email will be sent.  **Rate limits**  To prevent abuse, organization owners are limited to creating 50 organization invitations for an organization within a 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @option opts [OrgsSetMembershipForUserRequest] :orgs_set_membership_for_user_request 
  # @return [OrgMembership]
  describe 'orgs_set_membership_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_set_public_membership_for_authenticated_user
  # Set public organization membership for the authenticated user
  # The user can publicize their own membership. (A user cannot publicize the membership for another user.)  Note that you&#39;ll need to set &#x60;Content-Length&#x60; to zero when calling out to this endpoint. For more information, see \&quot;[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method).\&quot;
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_set_public_membership_for_authenticated_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_unblock_user
  # Unblock a user from an organization
  # Unblocks the given user on behalf of the specified organization.
  # @param org The organization name. The name is not case sensitive.
  # @param username The handle for the GitHub user account.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_unblock_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_update
  # Update an organization
  # **Parameter Deprecation Notice:** GitHub will replace and discontinue &#x60;members_allowed_repository_creation_type&#x60; in favor of more granular permissions. The new input parameters are &#x60;members_can_create_public_repositories&#x60;, &#x60;members_can_create_private_repositories&#x60; for all organizations and &#x60;members_can_create_internal_repositories&#x60; for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).  Updates the organization&#39;s profile and member privileges.  With security configurations (beta), your organization can choose a default security configuration which will automatically apply a set of security enablement settings to new repositories in your organization based on their visibility. For targeted repositories, the following attributes will be overridden by the default security configuration:  - advanced_security_enabled_for_new_repositories - dependabot_alerts_enabled_for_new_repositories - dependabot_security_updates_enabled_for_new_repositories - dependency_graph_enabled_for_new_repositories - secret_scanning_enabled_for_new_repositories - secret_scanning_push_protection_enabled_for_new_repositories  For more information on setting a default security configuration, see \&quot;[Enabling security features at scale](https://docs.github.com/code-security/securing-your-organization/introduction-to-securing-your-organization-at-scale/about-enabling-security-features-at-scale).\&quot;  The authenticated user must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;admin:org&#x60; or &#x60;repo&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [OrgsUpdateRequest] :orgs_update_request 
  # @return [OrganizationFull]
  describe 'orgs_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_update_membership_for_authenticated_user
  # Update an organization membership for the authenticated user
  # Converts the authenticated user to an active member of the organization, if that user has a pending invitation from the organization.
  # @param org The organization name. The name is not case sensitive.
  # @param orgs_update_membership_for_authenticated_user_request 
  # @param [Hash] opts the optional parameters
  # @return [OrgMembership]
  describe 'orgs_update_membership_for_authenticated_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_update_pat_access
  # Update the access a fine-grained personal access token has to organization resources
  # Updates the access an organization member has to organization resources via a fine-grained personal access token. Limited to revoking the token&#39;s existing access. Limited to revoking a token&#39;s existing access.  Only GitHub Apps can use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param pat_id The unique identifier of the fine-grained personal access token.
  # @param orgs_update_pat_access_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'orgs_update_pat_access test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_update_pat_accesses
  # Update the access to organization resources via fine-grained personal access tokens
  # Updates the access organization members have to organization resources via fine-grained personal access tokens. Limited to revoking a token&#39;s existing access.  Only GitHub Apps can use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param orgs_update_pat_accesses_request 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'orgs_update_pat_accesses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_update_webhook
  # Update an organization webhook
  # Updates a webhook configured in an organization. When you update a webhook, the &#x60;secret&#x60; will be overwritten. If you previously had a &#x60;secret&#x60; set, you must provide the same &#x60;secret&#x60; or set a new &#x60;secret&#x60; or the secret will be removed. If you are only updating individual webhook &#x60;config&#x60; properties, use \&quot;[Update a webhook configuration for an organization](/rest/orgs/webhooks#update-a-webhook-configuration-for-an-organization)\&quot;.  You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param hook_id The unique identifier of the hook. You can find this value in the &#x60;X-GitHub-Hook-ID&#x60; header of a webhook delivery.
  # @param [Hash] opts the optional parameters
  # @option opts [OrgsUpdateWebhookRequest] :orgs_update_webhook_request 
  # @return [OrgHook]
  describe 'orgs_update_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orgs_update_webhook_config_for_org
  # Update a webhook configuration for an organization
  # Updates the webhook configuration for an organization. To update more information about the webhook, including the &#x60;active&#x60; state and &#x60;events&#x60;, use \&quot;[Update an organization webhook ](/rest/orgs/webhooks#update-an-organization-webhook).\&quot;  You must be an organization owner to use this endpoint.  OAuth app tokens and personal access tokens (classic) need &#x60;admin:org_hook&#x60; scope. OAuth apps cannot list, view, or edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
  # @param org The organization name. The name is not case sensitive.
  # @param hook_id The unique identifier of the hook. You can find this value in the &#x60;X-GitHub-Hook-ID&#x60; header of a webhook delivery.
  # @param [Hash] opts the optional parameters
  # @option opts [AppsUpdateWebhookConfigForAppRequest] :apps_update_webhook_config_for_app_request 
  # @return [WebhookConfig]
  describe 'orgs_update_webhook_config_for_org test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
