=begin
#GitHub v3 REST API

#GitHub's v3 REST API.

The version of the OpenAPI document: 1.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::LicensesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LicensesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::LicensesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LicensesApi' do
    it 'should create an instance of LicensesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::LicensesApi)
    end
  end

  # unit tests for licenses_get
  # Get a license
  # Gets information about a specific license. For more information, see \&quot;[Licensing a repository ](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/licensing-a-repository).\&quot;
  # @param license 
  # @param [Hash] opts the optional parameters
  # @return [License]
  describe 'licenses_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for licenses_get_all_commonly_used
  # Get all commonly used licenses
  # Lists the most commonly used licenses on GitHub. For more information, see \&quot;[Licensing a repository ](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/licensing-a-repository).\&quot;
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :featured 
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<LicenseSimple>]
  describe 'licenses_get_all_commonly_used test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for licenses_get_for_repo
  # Get the license for a repository
  # This method returns the contents of the repository&#39;s license file, if one is detected.  This endpoint supports the following custom media types. For more information, see \&quot;[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types).\&quot;  - **&#x60;application/vnd.github.raw+json&#x60;**: Returns the raw contents of the license. - **&#x60;application/vnd.github.html+json&#x60;**: Returns the license contents in HTML. Markup languages are rendered to HTML using GitHub&#39;s open-source [Markup library](https://github.com/github/markup).
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ref The Git reference for the results you want to list. The &#x60;ref&#x60; for a branch can be formatted either as &#x60;refs/heads/&lt;branch name&gt;&#x60; or simply &#x60;&lt;branch name&gt;&#x60;. To reference a pull request use &#x60;refs/pull/&lt;number&gt;/merge&#x60;.
  # @return [LicenseContent]
  describe 'licenses_get_for_repo test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
