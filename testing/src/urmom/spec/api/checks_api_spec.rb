=begin
#GitHub v3 REST API

#GitHub's v3 REST API.

The version of the OpenAPI document: 1.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ChecksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ChecksApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ChecksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChecksApi' do
    it 'should create an instance of ChecksApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ChecksApi)
    end
  end

  # unit tests for checks_create
  # Create a check run
  # Creates a new check run for a specific commit in a repository.  To create a check run, you must use a GitHub App. OAuth apps and authenticated users are not able to create a check suite.  In a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.  **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty &#x60;pull_requests&#x60; array.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param checks_create_request 
  # @param [Hash] opts the optional parameters
  # @return [CheckRun]
  describe 'checks_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_create_suite
  # Create a check suite
  # Creates a check suite manually. By default, check suites are automatically created when you create a [check run](https://docs.github.com/rest/checks/runs). You only need to use this endpoint for manually creating check suites when you&#39;ve disabled automatic creation using \&quot;[Update repository preferences for check suites](https://docs.github.com/rest/checks/suites#update-repository-preferences-for-check-suites)\&quot;.  **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty &#x60;pull_requests&#x60; array and a &#x60;null&#x60; value for &#x60;head_branch&#x60;.  OAuth apps and personal access tokens (classic) cannot use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param checks_create_suite_request 
  # @param [Hash] opts the optional parameters
  # @return [CheckSuite]
  describe 'checks_create_suite test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_get
  # Get a check run
  # Gets a single check run using its &#x60;id&#x60;.  **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty &#x60;pull_requests&#x60; array.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; scope to use this endpoint on a private repository.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param check_run_id The unique identifier of the check run.
  # @param [Hash] opts the optional parameters
  # @return [CheckRun]
  describe 'checks_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_get_suite
  # Get a check suite
  # Gets a single check suite using its &#x60;id&#x60;.  **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty &#x60;pull_requests&#x60; array and a &#x60;null&#x60; value for &#x60;head_branch&#x60;.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; scope to use this endpoint on a private repository.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param check_suite_id The unique identifier of the check suite.
  # @param [Hash] opts the optional parameters
  # @return [CheckSuite]
  describe 'checks_get_suite test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_list_annotations
  # List check run annotations
  # Lists annotations for a check run using the annotation &#x60;id&#x60;.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; scope to use this endpoint on a private repository.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param check_run_id The unique identifier of the check run.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [Array<CheckAnnotation>]
  describe 'checks_list_annotations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_list_for_ref
  # List check runs for a Git reference
  # Lists check runs for a commit ref. The &#x60;ref&#x60; can be a SHA, branch name, or a tag name.  **Note:** The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty &#x60;pull_requests&#x60; array.  If there are more than 1000 check suites on a single git reference, this endpoint will limit check runs to the 1000 most recent check suites. To iterate over all possible check runs, use the [List check suites for a Git reference](https://docs.github.com/rest/reference/checks#list-check-suites-for-a-git-reference) endpoint and provide the &#x60;check_suite_id&#x60; parameter to the [List check runs in a check suite](https://docs.github.com/rest/reference/checks#list-check-runs-in-a-check-suite) endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; scope to use this endpoint on a private repository.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param ref The commit reference. Can be a commit SHA, branch name (&#x60;heads/BRANCH_NAME&#x60;), or tag name (&#x60;tags/TAG_NAME&#x60;). For more information, see \&quot;[Git References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)\&quot; in the Git documentation.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :check_name Returns check runs with the specified &#x60;name&#x60;.
  # @option opts [String] :status Returns check runs with the specified &#x60;status&#x60;.
  # @option opts [String] :filter Filters check runs by their &#x60;completed_at&#x60; timestamp. &#x60;latest&#x60; returns the most recent check runs.
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :app_id 
  # @return [ChecksListForSuite200Response]
  describe 'checks_list_for_ref test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_list_for_suite
  # List check runs in a check suite
  # Lists check runs for a check suite using its &#x60;id&#x60;.  **Note:** The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty &#x60;pull_requests&#x60; array.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; scope to use this endpoint on a private repository.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param check_suite_id The unique identifier of the check suite.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :check_name Returns check runs with the specified &#x60;name&#x60;.
  # @option opts [String] :status Returns check runs with the specified &#x60;status&#x60;.
  # @option opts [String] :filter Filters check runs by their &#x60;completed_at&#x60; timestamp. &#x60;latest&#x60; returns the most recent check runs.
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [ChecksListForSuite200Response]
  describe 'checks_list_for_suite test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_list_suites_for_ref
  # List check suites for a Git reference
  # Lists check suites for a commit &#x60;ref&#x60;. The &#x60;ref&#x60; can be a SHA, branch name, or a tag name.  **Note:** The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty &#x60;pull_requests&#x60; array and a &#x60;null&#x60; value for &#x60;head_branch&#x60;.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; scope to use this endpoint on a private repository.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param ref The commit reference. Can be a commit SHA, branch name (&#x60;heads/BRANCH_NAME&#x60;), or tag name (&#x60;tags/TAG_NAME&#x60;). For more information, see \&quot;[Git References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)\&quot; in the Git documentation.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :app_id Filters check suites by GitHub App &#x60;id&#x60;.
  # @option opts [String] :check_name Returns check runs with the specified &#x60;name&#x60;.
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :page The page number of the results to fetch. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @return [ChecksListSuitesForRef200Response]
  describe 'checks_list_suites_for_ref test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_rerequest_run
  # Rerequest a check run
  # Triggers GitHub to rerequest an existing check run, without pushing new code to a repository. This endpoint will trigger the [&#x60;check_run&#x60; webhook](https://docs.github.com/webhooks/event-payloads/#check_run) event with the action &#x60;rerequested&#x60;. When a check run is &#x60;rerequested&#x60;, its &#x60;status&#x60; is reset to &#x60;queued&#x60; and the &#x60;conclusion&#x60; is cleared.  For more information about how to re-run GitHub Actions jobs, see \&quot;[Re-run a job from a workflow run](https://docs.github.com/rest/actions/workflow-runs#re-run-a-job-from-a-workflow-run)\&quot;.  OAuth apps and personal access tokens (classic) cannot use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param check_run_id The unique identifier of the check run.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'checks_rerequest_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_rerequest_suite
  # Rerequest a check suite
  # Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [&#x60;check_suite&#x60; webhook](https://docs.github.com/webhooks/event-payloads/#check_suite) event with the action &#x60;rerequested&#x60;. When a check suite is &#x60;rerequested&#x60;, its &#x60;status&#x60; is reset to &#x60;queued&#x60; and the &#x60;conclusion&#x60; is cleared.  OAuth apps and personal access tokens (classic) cannot use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param check_suite_id The unique identifier of the check suite.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'checks_rerequest_suite test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_set_suites_preferences
  # Update repository preferences for check suites
  # Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/rest/checks/suites#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param checks_set_suites_preferences_request 
  # @param [Hash] opts the optional parameters
  # @return [CheckSuitePreference]
  describe 'checks_set_suites_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for checks_update
  # Update a check run
  # Updates a check run for a specific commit in a repository.  **Note:** The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty &#x60;pull_requests&#x60; array.  OAuth apps and personal access tokens (classic) cannot use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param check_run_id The unique identifier of the check run.
  # @param checks_update_request 
  # @param [Hash] opts the optional parameters
  # @return [CheckRun]
  describe 'checks_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
