=begin
#GitHub v3 REST API

#GitHub's v3 REST API.

The version of the OpenAPI document: 1.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SecurityAdvisoriesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SecurityAdvisoriesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SecurityAdvisoriesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SecurityAdvisoriesApi' do
    it 'should create an instance of SecurityAdvisoriesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SecurityAdvisoriesApi)
    end
  end

  # unit tests for security_advisories_create_fork
  # Create a temporary private fork
  # Create a temporary private fork to collaborate on fixing a security vulnerability in your repository.  **Note**: Forking a repository happens asynchronously. You may have to wait up to 5 minutes before you can access the fork.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param ghsa_id The GHSA (GitHub Security Advisory) identifier of the advisory.
  # @param [Hash] opts the optional parameters
  # @return [FullRepository]
  describe 'security_advisories_create_fork test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_create_private_vulnerability_report
  # Privately report a security vulnerability
  # Report a security vulnerability to the maintainers of the repository. See \&quot;[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)\&quot; for more information about private vulnerability reporting.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param private_vulnerability_report_create 
  # @param [Hash] opts the optional parameters
  # @return [RepositoryAdvisory]
  describe 'security_advisories_create_private_vulnerability_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_create_repository_advisory
  # Create a repository security advisory
  # Creates a new repository security advisory.  In order to create a draft repository security advisory, the authenticated user must be a security manager or administrator of that repository.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; or &#x60;repository_advisories:write&#x60; scope to use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param repository_advisory_create 
  # @param [Hash] opts the optional parameters
  # @return [RepositoryAdvisory]
  describe 'security_advisories_create_repository_advisory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_create_repository_advisory_cve_request
  # Request a CVE for a repository security advisory
  # If you want a CVE identification number for the security vulnerability in your project, and don&#39;t already have one, you can request a CVE identification number from GitHub. For more information see \&quot;[Requesting a CVE identification number](https://docs.github.com/code-security/security-advisories/repository-security-advisories/publishing-a-repository-security-advisory#requesting-a-cve-identification-number-optional).\&quot;  You may request a CVE for public repositories, but cannot do so for private repositories.  In order to request a CVE for a repository security advisory, the authenticated user must be a security manager or administrator of that repository.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; or &#x60;repository_advisories:write&#x60; scope to use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param ghsa_id The GHSA (GitHub Security Advisory) identifier of the advisory.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'security_advisories_create_repository_advisory_cve_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_get_global_advisory
  # Get a global security advisory
  # Gets a global security advisory using its GitHub Security Advisory (GHSA) identifier.
  # @param ghsa_id The GHSA (GitHub Security Advisory) identifier of the advisory.
  # @param [Hash] opts the optional parameters
  # @return [GlobalAdvisory]
  describe 'security_advisories_get_global_advisory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_get_repository_advisory
  # Get a repository security advisory
  # Get a repository security advisory using its GitHub Security Advisory (GHSA) identifier.  Anyone can access any published security advisory on a public repository.  The authenticated user can access an unpublished security advisory from a repository if they are a security manager or administrator of that repository, or if they are a collaborator on the security advisory.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; or &#x60;repository_advisories:read&#x60; scope to to get a published security advisory in a private repository, or any unpublished security advisory that the authenticated user has access to.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param ghsa_id The GHSA (GitHub Security Advisory) identifier of the advisory.
  # @param [Hash] opts the optional parameters
  # @return [RepositoryAdvisory]
  describe 'security_advisories_get_repository_advisory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_list_global_advisories
  # List global security advisories
  # Lists all global security advisories that match the specified parameters. If no other parameters are defined, the request will return only GitHub-reviewed advisories that are not malware.  By default, all responses will exclude advisories for malware, because malware are not standard vulnerabilities. To list advisories for malware, you must include the &#x60;type&#x60; parameter in your request, with the value &#x60;malware&#x60;. For more information about the different types of security advisories, see \&quot;[About the GitHub Advisory database](https://docs.github.com/code-security/security-advisories/global-security-advisories/about-the-github-advisory-database#about-types-of-security-advisories).\&quot;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ghsa_id If specified, only advisories with this GHSA (GitHub Security Advisory) identifier will be returned.
  # @option opts [String] :type If specified, only advisories of this type will be returned. By default, a request with no other parameters defined will only return reviewed advisories that are not malware.
  # @option opts [String] :cve_id If specified, only advisories with this CVE (Common Vulnerabilities and Exposures) identifier will be returned.
  # @option opts [SecurityAdvisoryEcosystems] :ecosystem If specified, only advisories for these ecosystems will be returned.
  # @option opts [String] :severity If specified, only advisories with these severities will be returned.
  # @option opts [SecurityAdvisoriesListGlobalAdvisoriesCwesParameter] :cwes If specified, only advisories with these Common Weakness Enumerations (CWEs) will be returned.  Example: &#x60;cwes&#x3D;79,284,22&#x60; or &#x60;cwes[]&#x3D;79&amp;cwes[]&#x3D;284&amp;cwes[]&#x3D;22&#x60;
  # @option opts [Boolean] :is_withdrawn Whether to only return advisories that have been withdrawn.
  # @option opts [SecurityAdvisoriesListGlobalAdvisoriesAffectsParameter] :affects If specified, only return advisories that affect any of &#x60;package&#x60; or &#x60;package@version&#x60;. A maximum of 1000 packages can be specified. If the query parameter causes the URL to exceed the maximum URL length supported by your client, you must specify fewer packages.  Example: &#x60;affects&#x3D;package1,package2@1.0.0,package3@^2.0.0&#x60; or &#x60;affects[]&#x3D;package1&amp;affects[]&#x3D;package2@1.0.0&#x60;
  # @option opts [String] :published If specified, only return advisories that were published on a date or date range.  For more information on the syntax of the date range, see \&quot;[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates).\&quot;
  # @option opts [String] :updated If specified, only return advisories that were updated on a date or date range.  For more information on the syntax of the date range, see \&quot;[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates).\&quot;
  # @option opts [String] :modified If specified, only show advisories that were updated or published on a date or date range.  For more information on the syntax of the date range, see \&quot;[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates).\&quot;
  # @option opts [String] :before A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :after A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :direction The direction to sort the results by.
  # @option opts [Integer] :per_page The number of results per page (max 100). For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :sort The property to sort the results by.
  # @return [Array<GlobalAdvisory>]
  describe 'security_advisories_list_global_advisories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_list_org_repository_advisories
  # List repository security advisories for an organization
  # Lists repository security advisories for an organization.  The authenticated user must be an owner or security manager for the organization to use this endpoint.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; or &#x60;repository_advisories:write&#x60; scope to use this endpoint.
  # @param org The organization name. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :direction The direction to sort the results by.
  # @option opts [String] :sort The property to sort the results by.
  # @option opts [String] :before A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :after A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :per_page The number of advisories to return per page. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :state Filter by the state of the repository advisories. Only advisories of this state will be returned.
  # @return [Array<RepositoryAdvisory>]
  describe 'security_advisories_list_org_repository_advisories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_list_repository_advisories
  # List repository security advisories
  # Lists security advisories in a repository.  The authenticated user can access unpublished security advisories from a repository if they are a security manager or administrator of that repository, or if they are a collaborator on any security advisory.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; or &#x60;repository_advisories:read&#x60; scope to to get a published security advisory in a private repository, or any unpublished security advisory that the authenticated user has access to.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :direction The direction to sort the results by.
  # @option opts [String] :sort The property to sort the results by.
  # @option opts [String] :before A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :after A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [Integer] :per_page The number of advisories to return per page. For more information, see \&quot;[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\&quot;
  # @option opts [String] :state Filter by state of the repository advisories. Only advisories of this state will be returned.
  # @return [Array<RepositoryAdvisory>]
  describe 'security_advisories_list_repository_advisories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for security_advisories_update_repository_advisory
  # Update a repository security advisory
  # Update a repository security advisory using its GitHub Security Advisory (GHSA) identifier.  In order to update any security advisory, the authenticated user must be a security manager or administrator of that repository, or a collaborator on the repository security advisory.  OAuth app tokens and personal access tokens (classic) need the &#x60;repo&#x60; or &#x60;repository_advisories:write&#x60; scope to use this endpoint.
  # @param owner The account owner of the repository. The name is not case sensitive.
  # @param repo The name of the repository without the &#x60;.git&#x60; extension. The name is not case sensitive.
  # @param ghsa_id The GHSA (GitHub Security Advisory) identifier of the advisory.
  # @param repository_advisory_update 
  # @param [Hash] opts the optional parameters
  # @return [RepositoryAdvisory]
  describe 'security_advisories_update_repository_advisory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
