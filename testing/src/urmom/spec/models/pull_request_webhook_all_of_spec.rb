=begin
#GitHub v3 REST API

#GitHub's v3 REST API.

The version of the OpenAPI document: 1.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for OpenapiClient::PullRequestWebhookAllOf
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe OpenapiClient::PullRequestWebhookAllOf do
  let(:instance) { OpenapiClient::PullRequestWebhookAllOf.new }

  describe 'test an instance of PullRequestWebhookAllOf' do
    it 'should create an instance of PullRequestWebhookAllOf' do
      expect(instance).to be_instance_of(OpenapiClient::PullRequestWebhookAllOf)
    end
  end
  describe 'test attribute "allow_auto_merge"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "allow_update_branch"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "delete_branch_on_merge"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "merge_commit_message"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PR_BODY", "PR_TITLE", "BLANK"])
      # validator.allowable_values.each do |value|
      #   expect { instance.merge_commit_message = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "merge_commit_title"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PR_TITLE", "MERGE_MESSAGE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.merge_commit_title = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "squash_merge_commit_message"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PR_BODY", "COMMIT_MESSAGES", "BLANK"])
      # validator.allowable_values.each do |value|
      #   expect { instance.squash_merge_commit_message = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "squash_merge_commit_title"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PR_TITLE", "COMMIT_OR_PR_TITLE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.squash_merge_commit_title = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "use_squash_pr_title_as_default"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
